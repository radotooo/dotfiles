[
    {
      "key": "alt+space",
      "command": "whichkey.show",
      "when": "editorTextFocus"
    },
    {
      "key": "shift+ctrl+e",
      "command": "actions.findWithSelection"
    },
    {
      "key": "ctrl+e",
      "command": "-actions.findWithSelection"
    },
    {
      "key": "ctrl+e",
      "command": "workbench.view.explorer"
    },
    {
      "key": "shift+ctrl+e",
      "command": "-workbench.view.explorer"
    },
    {
      "key": "r",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "enter",
      "command": "-renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "j",
      "command": "list.focusDown",
      "when": "listFocus && !inputFocus"
    },
    // {
    //   "key": "j"
    //   "command": "list.focusDown",
    //   "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    // },
    {
      "key": "ctrl+j",
      "command": "selectNextSuggestion",
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
      "key": "ctrl+k",
      "command": "selectPrevSuggestion",
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
      "key": "ctrl+j",
      "command": "workbench.action.quickOpenNavigateNext",
      "when": "inQuickOpen"
    },
    // {
    //   "key": "tab",
    //   "command": "selectNextSuggestion",
    //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    // },
    // {
    //   "key": "tab",
    //   "command": "workbench.action.quickOpenNavigateNext",
    //   "when": "inQuickOpen"
    // },
    {
      "key": "shit+tab",
      "command": "selectPrevSuggestion",
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
      "key": "shift+tab",
      "command": "selectPrevSuggestion",
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
      "key": "shift+tab",
      "command": "workbench.action.quickOpenNavigatePrevious",
      "when": "inQuickOpen"
    },
    {
      "key": "ctrl+k",
      "command": "workbench.action.quickOpenNavigatePrevious",
      "when": "inQuickOpen"
    },
    {
      "key": "enter",
      "command": "list.select",
      "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
      "key": "l",
      "command": "list.select",
      "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
      "key": "o",
      "command": "list.toggleExpand",
      "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
      "key": "h",
      "command": "list.collapse",
      "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
      "key": "a",
      "command": "explorer.newFile",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      "key": "shift+a",
      "command": "explorer.newFolder",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      "key": "shift+;",
      "command": "insertPrevSuggestion",
      "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
      "key": "ctrl+l",
      "when": "sideBarFocus",
      "command": "workbench.action.focusActiveEditorGroup"
    },
    {
      "key": "ctrl+k",
      "command": "workbench.action.focusActiveEditorGroup",
      "when": "terminalFocus"
    },
    {
      "key": "ctrl+shift+t",
      "command": "workbench.action.terminal.focus",
      "when": "!terminalFocus"
    },
    {
      "key": "alt+j",
      "command": "workbench.action.terminal.focus",
      "when": "!terminalFocus"
    },
    {
      "key": "ctrl+shift+t",
      "command": "workbench.action.togglePanel"
    },
    {
      "key": "ctrl+j",
      "command": "-workbench.action.togglePanel"
    },
    {
      "key": "ctrl+k ctrl+i",
      "command": "-editor.action.showHover",
      "when": "editorTextFocus"
    },
    {
      "key": "shift+tab",
      "command": "-acceptAlternativeSelectedSuggestion",
      "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
    },
    {
      "key": "ctrl+f",
      "command": "-vscode-neovim.ctrl-f",
      "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
      "key": "alt+`",
      "command": "workbench.action.terminal.toggleTerminal"
    },
    {
      "key": "ctrl+`",
      "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
      "key": "ctrl+shift+n",
      "command": "explorer.newFolder"
    },
    {
      "key": "ctrl+n",
      "command": "-workbench.action.files.newUntitledFile"
    },
    {
      "key": "alt+b",
      "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
      "key": "k",
      "command": "list.focusUp",
      "when": "listFocus && !inputFocus"
    },
    {
      "key": "up",
      "command": "-list.focusUp",
      "when": "listFocus && !inputFocus"
    },
    {
      "command": "vscode-neovim.compositeEscape2",
      "key": "k",
      "when": "neovim.mode == insert && editorTextFocus",
      "args": "k"
    },
    {
      "command": "vscode-neovim.compositeEscape1",
      "key": "j",
      "when": "neovim.mode == insert && editorTextFocus",
      "args": "j"
    },
    {
      "key": "ctrl+j",
      "command": "-editor.action.insertLineAfter",
      "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
    },
    {
      "key": "ctrl+s",
      "command": "-workbench.action.files.save"
    },
    {
      "key": "ctrl+s",
      "command": "workbench.action.files.save"
    },
    {
      "key": "ctrl+o",
      "command": "-workbench.action.files.openFile"
    },
    {
      "key": "ctrl+shift+d",
      "command": "editor.action.addSelectionToNextFindMatch",
      "when": "editorFocus"
    },
    {
      "key": "ctrl+d",
      "command": "-editor.action.addSelectionToNextFindMatch",
      "when": "editorFocus"
    },
    {
      "key": "ctrl+alt+-",
      "command": "workbench.action.decreaseViewSize"
    },
    {
      "key": "ctrl+alt+=",
      "command": "workbench.action.increaseViewSize"
    },
    {
      "key": "ctrl+shift+alt+unknown",
      "command": "git.unstageSelectedRanges",
      "when": "isInDiffEditor"
    },
    {
      "key": "ctrl+k ctrl+n",
      "command": "-git.unstageSelectedRanges",
      "when": "isInDiffEditor"
    },
    {
      "key": "ctrl+alt+r",
      "command": "git.revertSelectedRanges",
      "when": "isInDiffEditor"
    },
  
    {
      "key": "ctrl+alt+s",
      "command": "git.stage",
      "when": "isInDiffEditor" // only for illustrative purposes, i don't know if there is a when clause for this mode
    },
    {
      "key": "ctrl+alt+u",
      "command": "git.unstage",
      "when": "isInDiffEditor" // only for illustrative purposes, i don't know if there is a when clause for this mode
    },
    {
      "key": "alt+j",
      "command": "workbench.action.terminal.scrollDown",
      "when": "terminalFocus && terminalProcessSupported"
    },
    {
      "key": "alt+k",
      "command": "workbench.action.terminal.scrollUp",
      "when": "terminalFocus && terminalProcessSupported"
    },
    {
      "key": "shift+tab",
      "command": "search.action.focusSearchList",
      "when": "hasSearchResult && searchViewletFocus"
    },
    {
      "key": "ctrl+alt+-",
      "command": "workbench.action.terminal.resizePaneDown",
      "when": "terminalFocus && terminalProcessSupported"
    },
    {
      "key": "ctrl+alt+=",
      "command": "workbench.action.terminal.resizePaneUp",
      "when": "terminalFocus && terminalProcessSupported"
    }
  ]
  